// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proj.Manager.Infrastructure.Persistence.SQLServer;

#nullable disable

namespace Proj.Manager.Infrastructure.Persistence.SQLServer.Migrations
{
    [DbContext(typeof(SqlServerDBContext))]
    [Migration("20231015215100_MigrationsV2")]
    partial class MigrationsV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MembroTarefa", b =>
                {
                    b.Property<Guid>("MembrosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TarefasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MembrosId", "TarefasId");

                    b.HasIndex("TarefasId");

                    b.ToTable("MembroTarefa");
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Membro", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cargo")
                        .HasColumnType("int")
                        .HasColumnName("Cargo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Membro", (string)null);
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("DataInicio");

                    b.Property<DateTime>("DataPrazo")
                        .HasColumnType("datetime")
                        .HasColumnName("DataPrazo");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime")
                        .HasColumnName("DataTermino");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Descricao");

                    b.Property<Guid>("GerenteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GerenteId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("GerenteId");

                    b.ToTable("Projeto", (string)null);
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("DataInicio");

                    b.Property<DateTime>("DataPrazo")
                        .HasColumnType("datetime")
                        .HasColumnName("DataPrazo");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime")
                        .HasColumnName("DataTermino");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("ProjetoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProjetoId");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Tarefa", (string)null);
                });

            modelBuilder.Entity("MembroTarefa", b =>
                {
                    b.HasOne("Proj.Manager.Core.Entities.Membro", null)
                        .WithMany()
                        .HasForeignKey("MembrosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proj.Manager.Core.Entities.Tarefa", null)
                        .WithMany()
                        .HasForeignKey("TarefasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Projeto", b =>
                {
                    b.HasOne("Proj.Manager.Core.Entities.Membro", "Gerente")
                        .WithMany("Projetos")
                        .HasForeignKey("GerenteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Tarefa", b =>
                {
                    b.HasOne("Proj.Manager.Core.Entities.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Membro", b =>
                {
                    b.Navigation("Projetos");
                });

            modelBuilder.Entity("Proj.Manager.Core.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
